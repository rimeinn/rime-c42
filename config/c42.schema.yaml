schema:
  schema_id: c42
  name: "C 输入 · 四二顶"
  version: "2.4"
  author:
    - Cicin（15.02.05版）
    - 蓝落萧改编
  description: |
    改编自 Cicin 所作的 C 输入，取前 3 码为全码，4 码顶 2 码上屏
  dependencies:
    - c42a
    - pinyin_simp
    - stroke

switches:
  - name: ascii_mode
    states: [中, 西]
  - name: full_shape
    states: [半, 全]
  - name: traditional_char
    states: [简, 繁]
  - name: phrase
    states: [无, 联]
    reset: 1
  - name: char_suggestion
    states: [无, 字]
  - name: word_suggestion
    states: [无, 词]
  - name: disassembly
    states: [无, 拆]

menu:
  page_size: 6

engine:
  processors:
    - lua_processor@phrase_edit
    - ascii_composer
    - recognizer
    - key_binder
    - speller
    - punctuator
    - selector
    - navigator
    - express_editor
  segmentors:
    - ascii_segmentor
    - matcher
    - abc_segmentor
    - affix_segmentor@full
    - affix_segmentor@short
    - affix_segmentor@extra
    - punct_segmentor
    - fallback_segmentor
  translators:
    - punct_translator
    - table_translator
    - script_translator@full
    - script_translator@stroke
    - script_translator@pinyin_simp
    - lua_translator@history
  filters:
    - simplifier@char_suggestion
    - simplifier@disassembly
    - lua_filter@phrase
    # - simplifier@phrase
    - simplifier@traditional_char
    - simplifier@word_suggestion
    - reverse_lookup_filter@reverse_lookup

# processors

speller:
  alphabet: "qwertasdfgzxcvbyuiophjkl;nm,./"
  initials: "qwertasdfgzxcvbyuiophjkl;nm"
  auto_select: true

punctuator:
  import_preset: symbols_for_c
  half_shape:
    ",": { commit: "，" }
    "<": { commit: "《" }
    ".": { commit: "的" }
    ">": { commit: "》" }
    "/": { commit: "。" }
    "?": { commit: ？ }
    ";": [；, ／]
    ":": { commit: ： }
    "'": { pair: [「, 」] }
    '"': { pair: [『, 』] }
    "[": { commit: ［ }
    "]": { commit: ］ }
    "{": { commit: 【 }
    "}": { commit: 】 }
    '\': { commit: 、 }
    "|": { commit: ｜ }
    "`": [·, "　"]
    "~": { commit: ～ }
    "!": { commit: ！ }
    "$": { commit: ￥ }
    "^": { commit: …… }
    "(": （
    ")": ）
    "-": "-"
    "_": ——
    "+": "+"
    "=": "="
  full_shape:
    "`": "｀"
    "~": "～"
    "!": { commit: "！" }
    "@": ["＠", "☯"]
    "#": ["＃", "⌘"]
    "$": ["￥", "$", "€", "£", "¥", "¢", "¤"]
    "%": ["％", "°", "℃"]
    "^": { commit: "……" }
    "&": "＆"
    "*": ["＊", "·", "・", "×", "※", "❂"]
    "(": "（"
    ")": "）"
    "-": "－"
    _: "——"
    "=": "＝"
    "+": "＋"
    "[": ["「", "【", "〔", "［"]
    "{": ["『", "〖", "｛"]
    "]": ["」", "】", "〕", "］"]
    "}": ["』", "〗", "｝"]
    "\\": ["、", "＼"]
    "|": ["·", "｜", "§", "¦"]
    ";": { commit: "；" }
    ":": { commit: "：" }
    "'": { pair: ["‘", "’"] }
    '"': { pair: ["“", "”"] }
    ",": { commit: "，" }
    "<": ["《", "〈", "«", "‹"]
    .: { commit: "。" }
    ">": ["》", "〉", "»", "›"]
    "/": ["／", "÷"]
    "?": { commit: "？" }
    " ": { commit: "　" }

recognizer:
  patterns:
    full: "^[a-z;]{3}$"
    short: "^[a-z;][a-z;,./]$"
    extra: "^``[a-z]*$"
    punct: "^`([0-9]0?|[A-Za-z]*)$"

key_binder:
  import_preset: default
  bindings:
    - { when: has_menu, accept: period, send: period }
    - { when: has_menu, accept: comma, send: comma }
    - { when: has_menu, accept: minus, send: minus }
    - { when: has_menu, accept: equal, send: equal }
    - { when: has_menu, accept: Tab, send: Page_Down }
    - { when: paging, accept: "Shift+Tab", send: Page_Up }
    - { accept: "Control+Shift+4", toggle: traditional_char, when: always }
    - { accept: "Control+Shift+5", toggle: phrase, when: always }
    - { accept: "Control+Shift+6", toggle: char_suggestion, when: always }
    - { accept: "Control+Shift+7", toggle: word_suggestion, when: always }
    - { accept: "Control+Shift+8", toggle: disassembly, when: always }
    # - { when: has_menu, accept: 0, send: 2 }
    # - { when: has_menu, accept: 9, send: 3 }
    # - { when: has_menu, accept: 8, send: 4 }
    # - { when: has_menu, accept: 7, send: 5 }

# segmentors

extra:
  tag: extra
  prefix: "``"
  tips: "〔反查〕"

# translators

translator:
  dictionary: c42
  enable_charset_filter: false
  enable_sentence: false
  enable_encoder: false
  encode_commit_history: false
  enable_user_dict: false
  enable_completion: false

full:
  tag: full
  dictionary: c42a
  enable_user_dict: false

pinyin_simp:
  tag: extra
  dictionary: pinyin_simp
  enable_user_dict: false
  initial_quality: 1

stroke:
  tag: extra
  dictionary: stroke
  enable_user_dict: false
  initial_quality: 100

# filters

traditional_char:
  option_name: traditional_char
  opencc_config: s2t.json
  tags: [abc]

phrase:
  option_name: phrase
  # opencc_config: legacyphrase.json
  tags: [full, short]

char_suggestion:
  option_name: char_suggestion
  opencc_config: char.json
  tips: all
  show_in_comment: true
  comment_format:
    - xform/^(?!~)/二简〔/
    - xform/^~~/无理〔/
    - xform/^~/重码〔/
    - xform/$/〕/
  tags: [full]

word_suggestion:
  option_name: word_suggestion
  opencc_config: word.json
  tips: all
  show_in_comment: true
  comment_format:
    - xform/^/简词〔/
    - xform/$/〕/
  tags: [full, short]

disassembly:
  option_name: disassembly
  opencc_config: disassembly.json
  tips: all
  show_in_comment: true
  overwrite_comment: true
  comment_format:
    - xform/^/〔/
    - xform/$/〕/
  tags: [full, short]

reverse_lookup:
  dictionary: c42a
  overwrite_comment: true
  comment_format:
    - "xform/$/〕/"
    - "xform/^/〔/"
    - "xform/~//"
  tags: [extra]
